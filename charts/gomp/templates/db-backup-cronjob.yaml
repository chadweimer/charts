{{- range .Values.gomp.backups.db }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "gomp.fullname" $ }}-{{ .name }}-db-backup
  labels:
    {{- include "gomp.labels" $ | nindent 4 }}
spec:
  schedule: {{ .schedule }}
  jobTemplate:
    spec:
      template:
        spec:
          {{- with $.Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          serviceAccountName: {{ include "gomp.serviceAccountName" $ }}
          securityContext:
            {{- toYaml $.Values.podSecurityContext | nindent 12 }}
          containers:
            - name: {{ .name }}
              securityContext:
                {{- toYaml $.Values.securityContext | nindent 16 }}
              {{- if .destination.type | eq "nfs" }}
              image: postgres:14-alpine
              command: ["/bin/sh"]
              args:
                - "-c"
                - 'pg_dump $POSTGRES_DB | gzip > /backup/${POSTGRES_DB}_$(date +"%Y-%m-%dT%H:%M:%SZ").sql.gz'
              env:
                - name: PGHOST
                  value: {{ include "postgresql.baseUrl" $ }}
                - name: POSTGRES_DB
                  value: {{ $.Values.postgresql.auth.database }}
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      {{- if $.Values.postgresql.auth.existingSecret }}
                      name: {{ $.Values.postgresql.auth.existingSecret }}
                      key: password
                      {{- else }}
                      name: {{ include "gomp.fullname" $ }}
                      key: postgresql-password
                      {{- end }}
                - name: PGUSER
                  value: {{ $.Values.postgresql.auth.username }}
              volumeMounts:
                - name: backup
                  mountPath: /backup
                  {{- if .destination.subPath }}
                  subPath: {{ .destination.subPath }}
                  {{- end }}
              {{- else if .destination.type | eq "s3" }}
              image: cwmr/pgsql-s3-backup:1.3.0
              env:
                - name: POSTGRES_DATABASE
                  value: {{ $.Values.postgresql.auth.database }}
                - name: POSTGRES_EXTRA_OPTS
                  value: --schema=public
                - name: POSTGRES_HOST
                  value: {{ include "postgresql.baseUrl" $ }}
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      {{- if $.Values.postgresql.auth.existingSecret }}
                      name: {{ $.Values.postgresql.auth.existingSecret }}
                      key: password
                      {{- else }}
                      name: {{ include "gomp.fullname" $ }}
                      key: postgresql-password
                      {{- end }}
                - name: POSTGRES_USER
                  value: {{ $.Values.postgresql.auth.username }}
                - name: S3_BUCKET
                  value: {{ .destination.bucket }}
                - name: S3_PREFIX
                  value: db
                - name: S3_REGION
                  value: {{ $.Values.gomp.aws.region }}
                - name: S3_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: {{ $.Values.gomp.existingSecret | default (include "gomp.fullname" $) }}
                      key: aws-access-key-id
                - name: S3_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ $.Values.gomp.existingSecret | default (include "gomp.fullname" $) }}
                      key: aws-secret-access-key
              {{- end }}
          {{- if .destination.type | eq "nfs" }}
          volumes:
            - name: backup
              nfs:
                server: {{ .destination.server}}
                path: {{ .destination.path}}
          {{- end }}
          restartPolicy: Never
{{- end }}
